buildscript {
	ext {
		gitPropertiesPluginVersion = '2.0.0-beta1'
		springBootVersion = '2.0.6.RELEASE'
		//springBootVersion = '2.1.0.RC1'
		vaadinFlowVersion ='1.0.0.M6'
		//vaadinFlowVersion ='1.0.0.RC1'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gitPropertiesPluginVersion}")
		classpath("com.devsoap:gradle-vaadin-flow-plugin:${vaadinFlowVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'com.devsoap.vaadin-flow'

group = 'io.pivotal'
version = '1.0-SNAPSHOT'
sourceCompatibility = 8

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
	dateFormatTimeZone = "UTC"
	dotGitDirectory = "${project.rootDir}/.."
}

jacoco { 
	toolVersion = "0.8.2" 
}
    
jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
		csv.enabled = false
	}
	onlyIf = {
		true
	}
	doFirst {
		executionData = files(executionData.findAll {
			it.exists()
		})
	}
}

vaadin {
   version '11.0.1'
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	vaadin.repositories()
	mavenLocal()
}

dependencyManagement {
    imports {
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.0.2.RELEASE"
    }
}

dependencies {
	implementation('io.pivotal:orders-model:1.0-SNAPSHOT')
	implementation vaadin.bom()
  	implementation vaadin.core()
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.cloud:spring-cloud-starter-openfeign:2.0.2.RELEASE')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
	implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
    implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    testImplementation('org.mockito:mockito-core:2.23.0')
    testImplementation('org.mockito:mockito-junit-jupiter:2.23.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}

check.dependsOn jacocoTestReport
